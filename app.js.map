{"version":3,"file":"app.js","sources":["webpack:///./src/reducer/reducer.js"],"sourcesContent":["// Action Constants\nconst LOAD_SAUCES = 'LOAD_SAUCES';\nconst DELETE_SAUCE = 'DELETE_SAUCE';\nconst SAUCE_DETAILS = 'SAUCE_DETAILS';\nconst ADD_SAUCE = 'ADD_SAUCE';\n\n// Action Creators\nexport const loadSauces = payload => {\n  return dispatch => {\n    return dispatch({ type: LOAD_SAUCES, payload });\n  };\n};\n\nexport const deleteSauce = payload => {\n  return dispatch => {\n    return dispatch({ type: DELETE_SAUCE, payload });\n  };\n};\n\nexport const sauceDetails = payload => {\n  return dispatch => {\n    return dispatch({ type: SAUCE_DETAILS, payload });\n  };\n};\nexport const addSauce = payload => {\n  return dispatch => {\n    return dispatch({ type: ADD_SAUCE, payload });\n  };\n};\n\n// Initial State\nlet initialState = {\n  list: [],\n  selected: {}\n};\n\n// Reducer\nexport default (state = initialState, action) => {\n  let { type, payload } = action;\n\n  switch (type) {\n    case 'LOAD_SAUCES':\n      return { ...state, ...(state.list = [...payload]) };\n\n    case 'DELETE_SAUCE':\n      state.list.forEach((ele, i) => {\n        if (ele.id == payload) {\n          state.list.splice(i, 1);\n        }\n      });\n      return { ...state, ...(state.list = [...state.list]) };\n\n    case 'SAUCE_DETAILS':\n      let selectedSauce = {};\n      state.list.forEach((ele, i) => {\n        if (ele.id == payload) {\n          selectedSauce = { ...state.list[i] };\n        }\n      });\n      return { ...state, ...(state.selected = selectedSauce) };\n\n    case 'ADD_SAUCE':\n      state.list.push(payload);\n      return { ...state, ...(state.list = [...state.list]) };\n\n    default:\n      return state;\n  }\n};\n"],"mappings":"AA+BA","sourceRoot":""}